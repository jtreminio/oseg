#!/usr/bin/env bash

## example: ./bin/package-ruby petstore

set -e

DIR=$(cd `dirname $0` && pwd)
PROJECT=$1
SDK="ruby"
WORKING_DIR="/app/openapi"
PROJECT_DIR="${DIR}/../../oseg-examples/${PROJECT}"
SDK_DIR="${PROJECT_DIR}/${SDK}/sdk"
TARGET_DIR="${PROJECT_DIR}/${SDK}"
ARTIFACTS_DIR="${PROJECT_DIR}/${SDK}/artifacts"

if [[ -z "${PROJECT-}" ]] || [[ ! -d "${PROJECT_DIR}" ]]; then
  echo "Must provide project"
  exit 1
fi

rm -rf "${ARTIFACTS_DIR}"
mkdir -p "${ARTIFACTS_DIR}/gems"
rm -f "${SDK_DIR}/"*.gem

docker run --rm \
  -e GEM_HOME="/.gem-cache" \
  -e BUNDLE_PATH="/.bundle-cache" \
  -v "${SDK_DIR}:${WORKING_DIR}" \
  -v "${ARTIFACTS_DIR}:/artifacts" \
  -v "oseg-ruby-gem-cache:/.gem-cache" \
  -v "oseg-ruby-bundle-cache:/.bundle-cache" \
  -w "${WORKING_DIR}" \
  ruby:3.4 gem build *.gemspec

mv "${SDK_DIR}/"*.gem "${ARTIFACTS_DIR}/gems/"

docker run --rm \
  -e GEM_HOME="/.gem-cache" \
  -e BUNDLE_PATH="/.bundle-cache" \
  -v "${ARTIFACTS_DIR}:/artifacts" \
  -v "oseg-ruby-gem-cache:/.gem-cache" \
  -v "oseg-ruby-bundle-cache:/.bundle-cache" \
  -w "/artifacts" \
  ruby:3.4 gem generate_index
