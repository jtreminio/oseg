{%- macro print_scalar(printable) -%}
{{ printable.value }}
{%- endmacro -%}

{%- macro print_scalar_array(printable) -%}
    {% if printable.value == None %}{{ print_null() }}{% else %}
[
        {% for i in printable.value %}
    {{ i }},
        {% endfor %}
]
    {%- endif %}
{%- endmacro -%}

{%- macro print_file(printable) -%}
    {% if printable.value == None %}{{ print_null() }}{% else %}
new SplFileObject("{{ printable.value }}")
    {%- endif %}
{%- endmacro -%}

{%- macro print_file_array(printable) -%}
    {% if printable.value == None %}{{ print_null() }}{% else %}
[
        {% for i in printable.values %}
    new SplFileObject("{{ i }}"),
        {% endfor %}
]
    {%- endif %}
{%- endmacro -%}

{%- macro print_free_form(printable) -%}
    {% if printable.value == None %}{{ print_null() }}{% else %}
[
        {% for k, v in printable.value.items() %}
    "{{ k }}" => {{ v }},
        {% endfor %}
]
    {%- endif %}
{%- endmacro -%}

{%- macro print_free_form_array(printable) -%}
    {% if printable.value == None %}{{ print_null() }}{% else %}
[
        {% for obj in printable.value %}
    [
            {% for k, v in obj.items() %}
        "{{ k }}" => {{ v }},
            {% endfor %}
    ],
        {% endfor %}
]
    {%- endif %}
{%- endmacro -%}

{%- macro print_object(printable) -%}
    {% if printable.value == None %}{{ print_null() }}{% else %}
${{ printable.value|print_variablename }}
    {%- endif %}
{%- endmacro -%}

{%- macro print_object_array(printable) -%}
    {% if printable.value == None %}{{ print_null() }}{% else %}
[
    {% for i in printable.value %}
    ${{ i|print_variablename }},
    {% endfor %}
]
    {%- endif %}
{%- endmacro -%}

{%- macro print_security(printable) -%}
    {% set comment = "" %}
    {% if not printable.is_primary %}{% set comment = "// " %}{% endif %}
{{ comment }}$config->{{ ("set" ~ "_" ~ printable.method)|print_methodname }}
    {%- if printable.method == "api_key" %}("{{ printable.name }}", "{{ printable.value }}");
    {%- else %}("{{ printable.value }}");{%- endif %}
{%-endmacro -%}

{%- import "_macros.jinja2" as m with context -%}

<?php

{% if config.oseg_namespace %}
namespace {{ config.oseg_namespace }};

{% endif %}
require_once {{ config.oseg_autoload_location }};

use SplFileObject;
use {{ config.invoker_package|split("\\")|first }};

$config = {{ config.invoker_package }}\Configuration::getDefaultConfiguration();
{% if operation.security.is_optional %}
// Authentication is optional for this API endpoint
{% endif %}
{% call(security_schemes) m.parse_security_macro(0) %}
    {% for _, security in security_schemes.items() %}
{{ security }}
    {% endfor %}
{% endcall %}

{% call(objects) m.parse_objects_macro() %}
    {% for obj_name, obj in objects.items() %}
        {% if not obj.is_array %}
            {% call(properties) m.parse_object_properties_macro(obj, 4) %}
${{ obj_name|print_variablename }} = (new {{ config.invoker_package }}\Model\{{ obj.type|print_classname }}()){% if not properties %};{% endif %}

                {% for name, value in properties.items() %}
    ->{{ ("set" ~ "_" ~ name)|print_methodname }}({{ value }}){% if loop.last %};{% endif %}

                {% endfor %}
            {% endcall %}
        {% else %}
${{ obj_name|print_variablename }} = {{ "" }}
            {%- call(value) m.parse_object_list_properties_macro(obj, 0) %}
{{- value }};
            {% endcall %}
        {% endif %}

    {% endfor %}
{% endcall %}
try {
    {{ "" -}}
{% call(properties) m.parse_api_call_properties_macro(8) %}
    {% if operation.response and operation.response.body  %}$response = {% endif -%}
    (new {{ config.invoker_package }}\Api\{{ operation.api_name|print_classname }}Api(config: $config))->{{ operation.operation_id|print_methodname }}({%- if not properties %});
{% else %}

    {% for name, value in properties.items() %}
        {{ name|print_propname }}: {% if name|print_variablename == value %}${% endif %}{{ value }},
    {% endfor %}
    );
{% endif %}
{% endcall %}
{% if operation.response and operation.response.body and not operation.response.is_binary %}

    print_r($response);
{% elif operation.response and operation.response.is_binary %}

    copy($response->getRealPath(), __DIR__ . '/file_response');
{% endif %}
} catch ({{ config.invoker_package }}\ApiException $e) {
    echo "Exception when calling {{ operation.api_name|print_classname }}#{{ operation.operation_id|print_methodname }}: {$e->getMessage()}";
}
{{ "" }}
