{%- macro print_scalar(printable) -%}
{{ printable.value }}
{%- endmacro -%}

{%- macro print_scalar_array(printable) -%}
    {% if printable.value == None %}null{% else %}
[
        {% for i in printable.value %}
    {{ i }},
        {% endfor %}
]
    {%- endif %}
{%- endmacro -%}

{%- macro print_file(printable) -%}
    {% if printable.value == None %}null{% else %}
new SplFileObject("{{ printable.value }}")
    {%- endif %}
{%- endmacro -%}

{%- macro print_file_array(printable) -%}
    {% if printable.value == None %}null{% else %}
[
        {% for i in printable.values %}
    new SplFileObject("{{ i }}"),
        {% endfor %}
]
    {%- endif %}
{%- endmacro -%}

{%- macro print_free_form(printable) -%}
    {% if printable.value == None %}null{% else %}
[
        {% for k, v in printable.value.items() %}
    "{{ k }}": {{ v }},
        {% endfor %}
]
    {%- endif %}
{%- endmacro -%}

{%- macro print_free_form_array(printable) -%}
    {% if printable.value == None %}null{% else %}
[
        {% for obj in printable.value %}
    [
            {% for k, v in obj.items() %}
        "{{ k }}": {{ v }},
            {% endfor %}
    ],
        {% endfor %}
]
    {%- endif %}
{%- endmacro -%}

{%- macro print_object(printable) -%}
    {% if printable.value == None %}null{% else %}
{{ printable.value|print_variable }}
    {%- endif %}
{%- endmacro -%}

{%- macro print_object_array(printable) -%}
    {% if printable.value == None %}null{% else %}
[
    {% for i in printable.value %}
    {{ i|snake_case|print_variable }},
    {% endfor %}
]
    {%- endif %}
{%- endmacro -%}

{%- import "_macros.jinja2" as m with context -%}

<?php

require_once __DIR__ . '/vendor/autoload.php';

$config = {{ sdk_options.additional_properties.invokerPackage }}\Configuration::getDefaultConfiguration();

{% for obj_name, obj in property_container.flattened_objects().items() %}
    {% set parent_name = obj_name if obj_name != property_container.body.type else "" %}
    {% if not obj.is_array %}
        {% call(properties) m.parse_object_properties_macro(obj, 4) %}
{{ obj_name|print_variable }} = (new {{ sdk_options.additional_properties.invokerPackage }}\Model\{{ obj.type }}()){% if not properties %};{% endif %}

            {% for name, value in properties.items() %}
    ->set{{ name|print_setter }}({{ value }}){% if loop.last %};{% endif %}

            {% endfor %}
        {% endcall %}
    {% else %}
{{ obj_name|print_variable }} = {{ "" }}
        {%- call(value) m.parse_object_list_properties_macro(obj, 0) %}
{{- value }};
        {% endcall %}
    {% endif %}

{% endfor %}
try {
    $api_caller = new {{ sdk_options.additional_properties.invokerPackage }}\Api\{{ operation.api_name|pascal_case }}Api(config: $config);

    {{ "" -}}
    {% if operation.response and operation.response.body  %}$response = {% endif -%}
    $api_caller->{{ operation.operation_id|camel_case }}(
{% call(properties) m.parse_api_call_properties_macro(property_container, 8) %}
    {% for name, value in properties.items() %}
        {{ name|snake_case }}: {% if value != "null" %}{% endif %}{{ value }},
    {% endfor %}
{% endcall %}
    );
{% if operation.response and operation.response.body and not operation.response.is_binary %}

    print_r($response);
{% elif operation.response and operation.response.is_binary %}

    copy($response->getRealPath(), __DIR__ . '/file_response.zip');
{% endif %}
} catch ({{ sdk_options.additional_properties.invokerPackage }}\ApiException $e) {
    echo 'Exception when calling {{ operation.api_name|pascal_case }}#{{ operation.operation_id|camel_case }}: '
        . print_r($e->getResponseObject());
}
{{ "" }}
