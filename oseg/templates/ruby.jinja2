{%- macro print_scalar(printable) -%}
{{ printable.value }}
{%- endmacro -%}

{%- macro print_scalar_array(printable) -%}
    {% if printable.value == None %}nil{% else %}
[
        {% for i in printable.value %}
    {{ i }},
        {% endfor %}
]
    {%- endif %}
{%- endmacro -%}

{%- macro print_file(printable) -%}
    {% if printable.value == None %}nil{% else %}
File.new("{{ printable.value }}", "r")
    {%- endif %}
{%- endmacro -%}

{%- macro print_file_array(printable) -%}
    {% if printable.value == None %}nil{% else %}
[
        {% for i in printable.value %}
    File.new("{{ i }}", "r"),
        {% endfor %}
]
    {%- endif %}
{%- endmacro -%}

{%- macro print_free_form(printable) -%}
    {% if printable.value == None %}nil{% else %}
{
        {% for k, v in printable.value.items() %}
    "{{ k }}": {{ v }},
        {% endfor %}
}
    {%- endif %}
{%- endmacro -%}

{%- macro print_free_form_array(printable) -%}
    {% if printable.value == None %}nil{% else %}
[
        {% for obj in printable.value %}
    {
            {% for k, v in obj.items() %}
        "{{ k }}": {{ v }},
            {% endfor %}
    },
        {% endfor %}
]
    {%- endif %}
{%- endmacro -%}

{%- macro print_object(printable) -%}
{{ printable.value|print_variablename }}
{%- endmacro -%}

{%- macro print_object_array(printable) -%}
[
    {% for i in printable.value %}
    {{ i|print_variablename }},
    {% endfor %}
]
{%- endmacro -%}

{%- macro print_security(printable) -%}
    {% set comment = "" %}
    {% if not printable.is_primary %}{% set comment = "# " %}{% endif %}
{{ comment }}config.{{ printable.method|print_methodname }}
    {%- if printable.method == "api_key" %}["{{ printable.name }}"] = "{{ printable.value }}";
    {%- else %} = "{{ printable.value }}";{%- endif %}
{%-endmacro -%}

{%- import "_macros.jinja2" as m with context -%}

require "{{ config.gem_name }}"

{{ config.module_name }}.configure do |config|
{% if operation.security.is_optional %}
    # Authentication is optional for this API endpoint
{% endif %}
{% call(security_schemes) m.parse_security_macro(operation, 4) %}
    {% for _, security in security_schemes.items() %}
    {{ security }}
    {% endfor %}
{% endcall %}
end

{% call(objects) m.parse_objects_macro(property_container) %}
    {% for obj_name, obj in objects.items() %}
        {% if not obj.is_array %}
{{ obj_name|print_variablename }} = {{ config.module_name }}::{{ obj.type|print_classname }}.new
            {% call(properties) m.parse_object_properties_macro(property_container, obj, 0) %}
                {% for name, value in properties.items() %}
{{ obj_name|print_variablename }}.{{ name|print_methodname }} = {{ value }}
                {% endfor %}
            {% endcall %}
        {% else %}
{{ obj_name|print_variablename }} = {{ "" }}
            {%- call(value) m.parse_object_list_properties_macro(obj, 0) %}
    {{- value }}
            {% endcall %}
        {% endif %}

    {% endfor %}
{% endcall %}
begin
    {{ "" -}}
{% call(properties) m.parse_api_call_properties_macro(property_container, 8, True) %}
    {% call(opt_properties) m.parse_api_call_properties_macro(property_container, 8, False) %}
        {% if operation.response and operation.response.body  %}response = {% endif -%}
    {{ config.module_name }}::{{ (operation.api_name ~ "Api")|print_classname }}.new.{{ operation.operation_id|print_methodname }}{%- if not properties and not opt_properties %}

        {% else %}(
            {% for name, value in properties.items() %}
        {{ value }},
            {% endfor %}
            {% if opt_properties %}
        {
                {% for name, value in opt_properties.items() %}
            {{ name|print_propname }}: {{ value }},
                {% endfor %}
        },
            {% endif %}
    )
        {% endif %}
    {% endcall %}
{% endcall %}
{% if operation.response and operation.response.body and not operation.response.is_binary %}

    p response
{% elif operation.response and operation.response.is_binary %}

    FileUtils.cp(response.path, "./file_response")
{% endif %}
rescue {{ config.module_name }}::ApiError => e
    puts "Exception when calling {{ operation.api_name|print_classname }}#{{ operation.operation_id|print_methodname }}: #{e}"
end
{{ "" }}
