{%- macro print_scalar(printable) -%}
{% if printable.value == "null" %}undefined{% else %}
{{ printable.value }}
{%- endif %}
{%- endmacro -%}

{%- macro print_scalar_array(printable) -%}
    {% if printable.value == None %}undefined{% else %}
[
        {% for i in printable.value %}
    {{ i }},
        {% endfor %}
]{% if printable.is_enum and not printable.target_type %} as Array<{{ printable.value|join(" | ")}}>{% endif %}
    {%- endif %}
{%- endmacro -%}

{%- macro print_file(printable) -%}
    {% if printable.value == None %}undefined{% else %}
fs.createReadStream("{{ printable.value }}")
    {%- endif %}
{%- endmacro -%}

{%- macro print_file_array(printable) -%}
    {% if printable.value == None %}undefined{% else %}
[
        {% for i in printable.value %}
    fs.createReadStream("{{ i }}"),
        {% endfor %}
]
    {%- endif %}
{%- endmacro -%}

{%- macro print_free_form(printable) -%}
    {% if printable.value == None %}undefined{% else %}
{
        {% for k, v in printable.value.items() %}
    "{{ k }}": {{ v }},
        {% endfor %}
}
    {%- endif %}
{%- endmacro -%}

{%- macro print_free_form_array(printable) -%}
    {% if printable.value == None %}undefined{% else %}
[
        {% for obj in printable.value %}
    {
            {% for k, v in obj.items() %}
        "{{ k }}": {{ v }},
            {% endfor %}
    },
        {% endfor %}
]
    {%- endif %}
{%- endmacro -%}

{%- macro print_object(printable) -%}
    {% if printable.value == None %}undefined{% else %}
{{ printable.value|camel_case }}
    {%- endif %}
{%- endmacro -%}

{%- macro print_object_array(printable) -%}
    {% if printable.value == None %}undefined{% else %}
[
    {% for i in printable.value %}
    {{ i|camel_case }},
    {% endfor %}
]
    {%- endif %}
{%- endmacro -%}

{%- macro print_security(printable) -%}
    {% set comment = "" %}
    {% if not printable.is_primary %}{% set comment = "// " %}{% endif %}

    {%- if printable.method == "api_key" %}{{ comment }}apiCaller.setApiKey(api.{{ operation.api_name|split_uc|pascal_case }}ApiApiKeys.{{ printable.name }}, "{{ printable.value }}");
    {%- elif printable.method == "username" %}{{ comment }}apiCaller.username = "{{ printable.value }}";
    {%- elif printable.method == "password" %}{{ comment }}apiCaller.password = "{{ printable.value }}";
    {%- elif printable.method == "access_token" %}{{ comment }}apiCaller.accessToken = "{{ printable.value }}";
    {%- endif %}
{%-endmacro -%}

{%- import "_macros.jinja2" as m with context -%}

import * as fs from 'fs';
import api from "{{ config.npm_name }}"
import models from "{{ config.npm_name }}"

const apiCaller = new api.{{ operation.api_name|split_uc|pascal_case }}Api();
{% if operation.security.is_optional %}
// Authentication is optional for this API endpoint
{% endif %}
{% call(security_schemes) m.parse_security_macro(operation, 4) %}
    {% for _, security in security_schemes.items() %}
{{ security }}
    {% endfor %}
{% endcall %}

{% call(objects) m.parse_objects_macro(property_container) %}
    {% for obj_name, obj in objects.items() %}
        {% if not obj.is_array %}
const {{ obj_name|print_variable }} = new models.{{ obj.type|split_uc|pascal_case }}();
        {% call(properties) m.parse_object_properties_macro(property_container, obj, 0) %}
            {% for name, value in properties.items() %}
{{ obj_name|print_variable }}.{{ name|print_setter }} = {{ value }};
            {% endfor %}
        {% endcall %}
        {% else %}
const {{ obj_name|print_variable }} = {{ "" }}
            {%- call(value) m.parse_object_list_properties_macro(obj, 0) %}
    {{- value }};
            {% endcall %}
        {% endif %}

    {% endfor %}
{% endcall %}
{# todo don't print variables for formdata requests #}
{% if operation.request.parameters or operation.request.has_formdata %}
    {% call(properties) m.parse_api_call_properties_macro(property_container, 0, null, False) %}
        {% for name, value in properties.items() %}
const {{ name|print_variable }} = {{ value }};
        {% endfor %}
    {% endcall %}

{% endif %}
{% call(properties) m.parse_api_call_properties_macro(property_container, 4) %}
apiCaller.{{ operation.operation_id|camel_case }}({% if not properties %})
{%- else %}

    {% for name, value in properties.items() %}
    {{ name|print_variable }},
    {% endfor %}
){% endif %}{% endcall %}{%- if operation.response and operation.response.body  %}.then(response => {
{% if not operation.response.is_binary %}
  console.log(response.body);
{% elif operation.response.is_binary %}
  fs.createWriteStream('./file_response').write(response.body);
{% endif -%}
}){% endif %}.catch(error => {
  console.log("Exception when calling {{ operation.api_name|pascal_case }}#{{ operation.operation_id|camel_case }}:");
  console.log(error.body);
});
{{ "" }}
