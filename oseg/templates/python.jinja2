{%- macro print_scalar(printable) -%}
{{ printable.value }}
{%- endmacro -%}

{%- macro print_scalar_array(printable) -%}
    {% if printable.value == None %}None{% else %}
[
        {% for i in printable.value %}
    {{ i }},
        {% endfor %}
]
    {%- endif %}
{%- endmacro -%}

{%- macro print_file(printable) -%}
    {% if printable.value == None %}None{% else %}
open("{{ printable.value }}", "rb").read()
    {%- endif %}
{%- endmacro -%}

{%- macro print_file_array(printable) -%}
    {% if printable.value == None %}None{% else %}
[
        {% for i in printable.value %}
    open("{{ i }}", "rb").read(),
        {% endfor %}
]
    {%- endif %}
{%- endmacro -%}

{%- macro print_free_form(printable) -%}
    {% if printable.value == None %}None{% else %}
{
        {% for k, v in printable.value.items() %}
    "{{ k }}": {{ v }},
        {% endfor %}
}
    {%- endif %}
{%- endmacro -%}

{%- macro print_free_form_array(printable) -%}
    {% if printable.value == None %}None{% else %}
[
        {% for obj in printable.values %}
    {
            {% for k, v in obj.items() %}
        "{{ k }}": {{ v }},
            {% endfor %}
    },
        {% endfor %}
]
    {%- endif %}
{%- endmacro -%}

{%- macro print_object(printable) -%}
{{ printable.value|print_variable }}
{%- endmacro -%}

{%- macro print_object_array(printable) -%}
[
    {% for i in printable.value %}
    {{ i|print_variable }},
    {% endfor %}
]
{%- endmacro -%}

{%- macro print_security(printable) -%}
    {% set comment = "" %}
    {% if not printable.is_primary %}{% set comment = "# " %}{% endif %}

    {%- if printable.method == "api_key" %}{{ comment }}api_key={"{{ printable.name }}": "{{ printable.value }}"},
    {%- else %}{{ comment }}{{ printable.method }}="{{ printable.value }}",
    {%- endif %}
{%-endmacro -%}

{%- import "_macros.jinja2" as m with context -%}

from datetime import date, datetime
from pprint import pprint

from {{ config.package_name }} import ApiClient, ApiException, Configuration, api, models

configuration = Configuration({% if not operation.security %}){% else %}

    {% if operation.security.is_optional %}
    # Authentication is optional for this API endpoint
    {% endif %}
    {% call(security_schemes) m.parse_security_macro(operation, 4) %}
        {% for _, security in security_schemes.items() %}
    {{ security }}
        {% endfor %}
    {% endcall %}
)
{% endif %}

with ApiClient(configuration) as api_client:
{% call(objects) m.parse_objects_macro(property_container) %}
    {% for obj_name, obj in objects.items() %}
        {% if not obj.is_array %}
    {{ obj_name|print_variable }} = models.{{ obj.type|uc_first }}(
            {% call(properties) m.parse_object_properties_macro(property_container, obj, 8) %}
                {% for name, value in properties.items() %}
        {{ name|print_setter }}={{ value }},
                {% endfor %}
            {% endcall %}
    )
        {% else %}
    {{ obj_name|print_variable }} = {{ "" }}
            {%- call(value) m.parse_object_list_properties_macro(obj, 4) %}
            {{- value }}
            {% endcall %}
        {% endif %}

    {% endfor %}
{% endcall %}
    try:
        {{ "" -}}
{% call(properties) m.parse_api_call_properties_macro(property_container, 12) %}
        {% if operation.response and operation.response.body  %}response = {% endif -%}
        api.{{ operation.api_name|pascal_case }}Api(api_client).{{ operation.operation_id|snake_case }}({%- if not properties %})
{% else %}

    {% for name, value in properties.items() %}
            {{ name|print_variable }}={{ value }},
    {% endfor %}
        )
{% endif %}
{% endcall %}
    {% if operation.response and operation.response.body and not operation.response.is_binary %}

        pprint(response)
    {% elif operation.response and operation.response.is_binary %}

        open("./file_response", "wb").write(response.read())
    {% endif %}
    except ApiException as e:
        print("Exception when calling {{ operation.api_name|pascal_case }}#{{ operation.operation_id|snake_case }}: %s\n" % e)
{{ "" }}
